import{Close as e,Content as t,Description as n,Overlay as r,Portal as i,Root as a,Title as o,Trigger as s,WarningProvider as c,__toESM as l,buttonVariants as u,cn as d,composeEventHandlers as f,createContextScope as p,createDialogScope as m,createLucideIcon as h,createSlottable as ee,require_jsx_runtime as g,require_react as _,useComposedRefs as v}from"./index-BpPvn16n.js";const y=[[`path`,{d:`M3 6h18`,key:`d0wm0j`}],[`path`,{d:`M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6`,key:`4alrt4`}],[`path`,{d:`M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2`,key:`v07s0e`}],[`line`,{x1:`10`,x2:`10`,y1:`11`,y2:`17`,key:`1uufr5`}],[`line`,{x1:`14`,x2:`14`,y1:`11`,y2:`17`,key:`xtxkd`}]],b=h(`trash-2`,y);var x=l(_(),1),S=l(g(),1),C=`AlertDialog`,[w,te]=p(C,[m]),T=m(),E=e=>{let{__scopeAlertDialog:t,...n}=e,r=T(t);return(0,S.jsx)(a,{...r,...n,modal:!0})};E.displayName=C;var ne=`AlertDialogTrigger`,D=x.forwardRef((e,t)=>{let{__scopeAlertDialog:n,...r}=e,i=T(n);return(0,S.jsx)(s,{...i,...r,ref:t})});D.displayName=ne;var O=`AlertDialogPortal`,k=e=>{let{__scopeAlertDialog:t,...n}=e,r=T(t);return(0,S.jsx)(i,{...r,...n})};k.displayName=O;var A=`AlertDialogOverlay`,j=x.forwardRef((e,t)=>{let{__scopeAlertDialog:n,...i}=e,a=T(n);return(0,S.jsx)(r,{...a,...i,ref:t})});j.displayName=A;var M=`AlertDialogContent`,[N,P]=w(M),F=ee(`AlertDialogContent`),I=x.forwardRef((e,n)=>{let{__scopeAlertDialog:r,children:i,...a}=e,o=T(r),s=x.useRef(null),l=v(n,s),u=x.useRef(null);return(0,S.jsx)(c,{contentName:M,titleName:L,docsSlug:`alert-dialog`,children:(0,S.jsx)(N,{scope:r,cancelRef:u,children:(0,S.jsxs)(t,{role:`alertdialog`,...o,...a,ref:l,onOpenAutoFocus:f(a.onOpenAutoFocus,e=>{var t;e.preventDefault(),(t=u.current)?.focus({preventScroll:!0})}),onPointerDownOutside:e=>e.preventDefault(),onInteractOutside:e=>e.preventDefault(),children:[(0,S.jsx)(F,{children:i}),(0,S.jsx)(G,{contentRef:s})]})})})});I.displayName=M;var L=`AlertDialogTitle`,R=x.forwardRef((e,t)=>{let{__scopeAlertDialog:n,...r}=e,i=T(n);return(0,S.jsx)(o,{...i,...r,ref:t})});R.displayName=L;var z=`AlertDialogDescription`,B=x.forwardRef((e,t)=>{let{__scopeAlertDialog:r,...i}=e,a=T(r);return(0,S.jsx)(n,{...a,...i,ref:t})});B.displayName=z;var V=`AlertDialogAction`,H=x.forwardRef((t,n)=>{let{__scopeAlertDialog:r,...i}=t,a=T(r);return(0,S.jsx)(e,{...a,...i,ref:n})});H.displayName=V;var U=`AlertDialogCancel`,W=x.forwardRef((t,n)=>{let{__scopeAlertDialog:r,...i}=t,{cancelRef:a}=P(U,r),o=T(r),s=v(n,a);return(0,S.jsx)(e,{...o,...i,ref:s})});W.displayName=U;var G=({contentRef:e})=>{let t=`\`${M}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${M}\` by passing a \`${z}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${M}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return x.useEffect(()=>{var n;let r=document.getElementById((n=e.current)?.getAttribute(`aria-describedby`));r||console.warn(t)},[t,e]),null},K=E,q=D,J=k,Y=j,X=I,Z=W,Q=R,re=B;function ie({...e}){return(0,S.jsx)(K,{"data-slot":`alert-dialog`,...e})}function $({...e}){return(0,S.jsx)(q,{"data-slot":`alert-dialog-trigger`,...e})}function ae({...e}){return(0,S.jsx)(J,{"data-slot":`alert-dialog-portal`,...e})}function oe({className:e,...t}){return(0,S.jsx)(Y,{"data-slot":`alert-dialog-overlay`,className:d(`data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50`,e),...t})}function se({className:e,...t}){return(0,S.jsxs)(ae,{children:[(0,S.jsx)(oe,{}),(0,S.jsx)(X,{"data-slot":`alert-dialog-content`,className:d(`bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg`,e),...t})]})}function ce({className:e,...t}){return(0,S.jsx)(`div`,{"data-slot":`alert-dialog-header`,className:d(`flex flex-col gap-2 text-center sm:text-left`,e),...t})}function le({className:e,...t}){return(0,S.jsx)(`div`,{"data-slot":`alert-dialog-footer`,className:d(`flex flex-col-reverse gap-2 sm:flex-row sm:justify-end`,e),...t})}function ue({className:e,...t}){return(0,S.jsx)(Q,{"data-slot":`alert-dialog-title`,className:d(`text-lg font-semibold`,e),...t})}function de({className:e,...t}){return(0,S.jsx)(re,{"data-slot":`alert-dialog-description`,className:d(`text-muted-foreground text-sm`,e),...t})}function fe({className:e,...t}){return(0,S.jsx)(Z,{className:d(u({variant:`outline`}),e),...t})}export{ie as AlertDialog,fe as AlertDialogCancel,se as AlertDialogContent,de as AlertDialogDescription,le as AlertDialogFooter,ce as AlertDialogHeader,ue as AlertDialogTitle,$ as AlertDialogTrigger,b as Trash2};
const e={pending:`Pending`,pending_info:`Pending Info`,pending_date:`Pending Date`,hold:`Hold`,not_confirmed:`Not Confirmed`,confirmed:`Confirmed`,not_available:`Not Available`,completed:`Completed`,spam:`Spam`,canceled:`Canceled`,refused:`Refused`,closed:`Closed`,expired:`Expired`,archived:`Archived`},t=Object.entries(e).map(([e,t])=>({label:t,value:e})),n={all:`All Requests`,pending:`Pending`,not_confirmed:`Not Confirmed`,confirmed:`Confirmed`,not_available:`Not Available`,completed:`Completed`,spam:`Spam`,canceled:`Canceled`,refused:`Refused`,closed:`Closed`,expired:`Expired`,archived:`Archived`},r=Object.entries(n).map(([e,t])=>({label:t,value:e})),i={all:`text-foreground`,pending:`text-amber-500`,pending_info:`text-red-500`,pending_date:`text-red-500`,hold:`text-amber-500`,not_confirmed:`text-indigo-500`,confirmed:`text-[#00a455]`,not_available:`text-foreground`,completed:`text-[#26a9f4]`,spam:`text-foreground`,canceled:`text-red-500`,refused:`text-foreground`,closed:`text-foreground`,expired:`text-foreground`,archived:`text-foreground`},a={all:`bg-muted-foreground`,pending:`bg-amber-500`,pending_info:`bg-red-500`,pending_date:`bg-red-500`,hold:`bg-amber-500`,not_confirmed:`bg-indigo-500`,confirmed:`bg-[#00a455]`,not_available:`bg-foreground`,completed:`bg-[#26a9f4]`,spam:`bg-foreground`,canceled:`bg-red-500`,refused:`bg-foreground`,closed:`bg-foreground`,expired:`bg-foreground`,archived:`bg-foreground`};function o(){let e=[];for(let t=0;t<24;t++)for(let n=0;n<60;n+=15){let r=t*60+n;e.push({value:r,label:`${t.toString()}:${n.toString().padStart(2,`0`)}`})}return e}const s=e=>{let t=e?.withMeridiem??!1,n=[];for(let e=0;e<24*60;e+=15){let r=Math.floor(e/60),i=e%60,a=t?new Date(0,0,0,r,i).toLocaleTimeString([],{hour:`2-digit`,minute:`2-digit`,hour12:!0}):`${r.toString().padStart(2,`0`)}:${i.toString().padStart(2,`0`)}`;n.push({label:a,value:e})}return n},c=s({withMeridiem:!0}),l=o();var u={logger:typeof console<`u`?console:void 0,WebSocket:typeof WebSocket<`u`?WebSocket:void 0},d={log(...e){this.enabled&&(e.push(Date.now()),u.logger.log(`[ActionCable]`,...e))}};const f=()=>new Date().getTime(),p=e=>(f()-e)/1e3;var m=class{constructor(e){this.visibilityDidChange=this.visibilityDidChange.bind(this),this.connection=e,this.reconnectAttempts=0}start(){this.isRunning()||(this.startedAt=f(),delete this.stoppedAt,this.startPolling(),addEventListener(`visibilitychange`,this.visibilityDidChange),d.log(`ConnectionMonitor started. stale threshold = ${this.constructor.staleThreshold} s`))}stop(){this.isRunning()&&(this.stoppedAt=f(),this.stopPolling(),removeEventListener(`visibilitychange`,this.visibilityDidChange),d.log(`ConnectionMonitor stopped`))}isRunning(){return this.startedAt&&!this.stoppedAt}recordMessage(){this.pingedAt=f()}recordConnect(){this.reconnectAttempts=0,delete this.disconnectedAt,d.log(`ConnectionMonitor recorded connect`)}recordDisconnect(){this.disconnectedAt=f(),d.log(`ConnectionMonitor recorded disconnect`)}startPolling(){this.stopPolling(),this.poll()}stopPolling(){clearTimeout(this.pollTimeout)}poll(){this.pollTimeout=setTimeout(()=>{this.reconnectIfStale(),this.poll()},this.getPollInterval())}getPollInterval(){let{staleThreshold:e,reconnectionBackoffRate:t}=this.constructor,n=(1+t)**+Math.min(this.reconnectAttempts,10),r=this.reconnectAttempts===0?1:t,i=r*Math.random();return e*1e3*n*(1+i)}reconnectIfStale(){this.connectionIsStale()&&(d.log(`ConnectionMonitor detected stale connection. reconnectAttempts = ${this.reconnectAttempts}, time stale = ${p(this.refreshedAt)} s, stale threshold = ${this.constructor.staleThreshold} s`),this.reconnectAttempts++,this.disconnectedRecently()?d.log(`ConnectionMonitor skipping reopening recent disconnect. time disconnected = ${p(this.disconnectedAt)} s`):(d.log(`ConnectionMonitor reopening`),this.connection.reopen()))}get refreshedAt(){return this.pingedAt?this.pingedAt:this.startedAt}connectionIsStale(){return p(this.refreshedAt)>this.constructor.staleThreshold}disconnectedRecently(){return this.disconnectedAt&&p(this.disconnectedAt)<this.constructor.staleThreshold}visibilityDidChange(){document.visibilityState===`visible`&&setTimeout(()=>{(this.connectionIsStale()||!this.connection.isOpen())&&(d.log(`ConnectionMonitor reopening stale connection on visibilitychange. visibilityState = ${document.visibilityState}`),this.connection.reopen())},200)}};m.staleThreshold=6,m.reconnectionBackoffRate=.15;var h={message_types:{welcome:`welcome`,disconnect:`disconnect`,ping:`ping`,confirmation:`confirm_subscription`,rejection:`reject_subscription`},disconnect_reasons:{unauthorized:`unauthorized`,invalid_request:`invalid_request`,server_restart:`server_restart`,remote:`remote`},default_mount_path:`/cable`,protocols:[`actioncable-v1-json`,`actioncable-unsupported`]};const{message_types:g,protocols:_}=h,v=_.slice(0,_.length-1),y=[].indexOf;var b=class{constructor(e){this.open=this.open.bind(this),this.consumer=e,this.subscriptions=this.consumer.subscriptions,this.monitor=new m(this),this.disconnected=!0}send(e){return this.isOpen()?(this.webSocket.send(JSON.stringify(e)),!0):!1}open(){if(this.isActive())return d.log(`Attempted to open WebSocket, but existing socket is ${this.getState()}`),!1;{let e=[..._,...this.consumer.subprotocols||[]];return d.log(`Opening WebSocket, current state is ${this.getState()}, subprotocols: ${e}`),this.webSocket&&this.uninstallEventHandlers(),this.webSocket=new u.WebSocket(this.consumer.url,e),this.installEventHandlers(),this.monitor.start(),!0}}close({allowReconnect:e}={allowReconnect:!0}){if(e||this.monitor.stop(),this.isOpen())return this.webSocket.close()}reopen(){if(d.log(`Reopening WebSocket, current state is ${this.getState()}`),this.isActive())try{return this.close()}catch(e){d.log(`Failed to reopen WebSocket`,e)}finally{d.log(`Reopening WebSocket in ${this.constructor.reopenDelay}ms`),setTimeout(this.open,this.constructor.reopenDelay)}else return this.open()}getProtocol(){if(this.webSocket)return this.webSocket.protocol}isOpen(){return this.isState(`open`)}isActive(){return this.isState(`open`,`connecting`)}triedToReconnect(){return this.monitor.reconnectAttempts>0}isProtocolSupported(){return y.call(v,this.getProtocol())>=0}isState(...e){return y.call(e,this.getState())>=0}getState(){if(this.webSocket){for(let e in u.WebSocket)if(u.WebSocket[e]===this.webSocket.readyState)return e.toLowerCase()}return null}installEventHandlers(){for(let e in this.events){let t=this.events[e].bind(this);this.webSocket[`on${e}`]=t}}uninstallEventHandlers(){for(let e in this.events)this.webSocket[`on${e}`]=function(){}}};b.reopenDelay=500,b.prototype.events={message(e){if(!this.isProtocolSupported())return;let{identifier:t,message:n,reason:r,reconnect:i,type:a}=JSON.parse(e.data);switch(this.monitor.recordMessage(),a){case g.welcome:return this.triedToReconnect()&&(this.reconnectAttempted=!0),this.monitor.recordConnect(),this.subscriptions.reload();case g.disconnect:return d.log(`Disconnecting. Reason: ${r}`),this.close({allowReconnect:i});case g.ping:return null;case g.confirmation:return this.subscriptions.confirmSubscription(t),this.reconnectAttempted?(this.reconnectAttempted=!1,this.subscriptions.notify(t,`connected`,{reconnected:!0})):this.subscriptions.notify(t,`connected`,{reconnected:!1});case g.rejection:return this.subscriptions.reject(t);default:return this.subscriptions.notify(t,`received`,n)}},open(){if(d.log(`WebSocket onopen event, using '${this.getProtocol()}' subprotocol`),this.disconnected=!1,!this.isProtocolSupported())return d.log(`Protocol is unsupported. Stopping monitor and disconnecting.`),this.close({allowReconnect:!1})},close(e){if(d.log(`WebSocket onclose event`),!this.disconnected)return this.disconnected=!0,this.monitor.recordDisconnect(),this.subscriptions.notifyAll(`disconnected`,{willAttemptReconnect:this.monitor.isRunning()})},error(){d.log(`WebSocket onerror event`)}};const x=function(e,t){if(t!=null)for(let n in t){let r=t[n];e[n]=r}return e};var S=class{constructor(e,t={},n){this.consumer=e,this.identifier=JSON.stringify(t),x(this,n)}perform(e,t={}){return t.action=e,this.send(t)}send(e){return this.consumer.send({command:`message`,identifier:this.identifier,data:JSON.stringify(e)})}unsubscribe(){return this.consumer.subscriptions.remove(this)}},C=class{constructor(e){this.subscriptions=e,this.pendingSubscriptions=[]}guarantee(e){this.pendingSubscriptions.indexOf(e)==-1?(d.log(`SubscriptionGuarantor guaranteeing ${e.identifier}`),this.pendingSubscriptions.push(e)):d.log(`SubscriptionGuarantor already guaranteeing ${e.identifier}`),this.startGuaranteeing()}forget(e){d.log(`SubscriptionGuarantor forgetting ${e.identifier}`),this.pendingSubscriptions=this.pendingSubscriptions.filter(t=>t!==e)}startGuaranteeing(){this.stopGuaranteeing(),this.retrySubscribing()}stopGuaranteeing(){clearTimeout(this.retryTimeout)}retrySubscribing(){this.retryTimeout=setTimeout(()=>{this.subscriptions&&typeof this.subscriptions.subscribe==`function`&&this.pendingSubscriptions.map(e=>{d.log(`SubscriptionGuarantor resubscribing ${e.identifier}`),this.subscriptions.subscribe(e)})},500)}},w=class{constructor(e){this.consumer=e,this.guarantor=new C(this),this.subscriptions=[]}create(e,t){let n=e,r=typeof n==`object`?n:{channel:n},i=new S(this.consumer,r,t);return this.add(i)}add(e){return this.subscriptions.push(e),this.consumer.ensureActiveConnection(),this.notify(e,`initialized`),this.subscribe(e),e}remove(e){return this.forget(e),this.findAll(e.identifier).length||this.sendCommand(e,`unsubscribe`),e}reject(e){return this.findAll(e).map(e=>(this.forget(e),this.notify(e,`rejected`),e))}forget(e){return this.guarantor.forget(e),this.subscriptions=this.subscriptions.filter(t=>t!==e),e}findAll(e){return this.subscriptions.filter(t=>t.identifier===e)}reload(){return this.subscriptions.map(e=>this.subscribe(e))}notifyAll(e,...t){return this.subscriptions.map(n=>this.notify(n,e,...t))}notify(e,t,...n){let r;return r=typeof e==`string`?this.findAll(e):[e],r.map(e=>typeof e[t]==`function`?e[t](...n):void 0)}subscribe(e){this.sendCommand(e,`subscribe`)&&this.guarantor.guarantee(e)}confirmSubscription(e){d.log(`Subscription confirmed ${e}`),this.findAll(e).map(e=>this.guarantor.forget(e))}sendCommand(e,t){let{identifier:n}=e;return this.consumer.send({command:t,identifier:n})}},T=class{constructor(e){this._url=e,this.subscriptions=new w(this),this.connection=new b(this),this.subprotocols=[]}get url(){return E(this._url)}send(e){return this.connection.send(e)}connect(){return this.connection.open()}disconnect(){return this.connection.close({allowReconnect:!1})}ensureActiveConnection(){if(!this.connection.isActive())return this.connection.open()}addSubProtocol(e){this.subprotocols=[...this.subprotocols,e]}};function E(e){if(typeof e==`function`&&(e=e()),e&&!/^wss?:/i.test(e)){let t=document.createElement(`a`);return t.href=e,t.href=t.href,t.protocol=t.protocol.replace(`http`,`ws`),t.href}else return e}function D(e=O(`url`)||h.default_mount_path){return new T(e)}function O(e){let t=document.head.querySelector(`meta[name='action-cable-${e}']`);if(t)return t.getAttribute(`content`)}const k=D(`ws://localhost:3001/cable`);var A=k;export{l as TIME_OPTIONS,c as TIME_OPTIONS_WITH_MERIDIEM,A as cable_default,a as statusBgColors,t as statusOptions,i as statusTextColors,r as tabOptions};